name: Build and Push Multiple Docker Images

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: admin.k8s.Dockerfile
            image_name: nutfes/group-manager-2-admin-view
            vue_app_url: ''
            vue_app_api_url: ''
            imgur_id: ''
            imgur_token: ''

          - dockerfile: front.k8s.Dockerfile
            image_name: nutfes/group-manager-2-user-front
            vue_app_url: ${{ secrets.VUE_APP_URL }}
            vue_app_api_url: ${{ secrets.VUE_APP_API_URL }}
            imgur_id: ${{ secrets.NUXT_IMGUR_CLIENT_ID }}
            imgur_token: ${{ secrets.NUXT_IMGUR_CLIENT_SECRET }}

          - dockerfile: api.k8s.Dockerfile
            image_name: nutfes/group-manager-2-api
            vue_app_url: ${{ secrets.VUE_APP_URL }}
            vue_app_api_url: ${{ secrets.VUE_APP_API_URL }}
            imgur_id: ''
            imgur_token: ''


    steps:
      - uses: actions/checkout@v4

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ matrix.image_name }}:latest
          build-args: |
            VUE_APP_URL=${{ matrix.vue_app_url }}
            VUE_APP_API_URL=${{ matrix.vue_app_api_url }}
            NUXT_IMGUR_CLIENT_ID=${{ matrix.imgur_id }}
            NUXT_IMGUR_CLIENT_SECRET=${{ matrix.imgur_token }}

